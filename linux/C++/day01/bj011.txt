蒋贵良
jianggl@tedu.cn
-----------------------
C++课程内容
从C到C++
类和对象
操作符重载
继承和多态
异常和IO流
------------------------------
一 C++语言概述
1 C++历史背景
1.1 C++江湖地位
java、C、C++、python、C#...

1.2 C++之父：Bjarne Stoustrup(1950--)
1979，Cpre，为C语言增加类的机制
1983，Bjarne 发布全新编程语言C with class，后来命名为C++
1985，CFront 1.0，
          《The C++ programming Language》

1.3 发展过程
1987，GNU C++
1990，Borland C++（BC编译器）
1992，Microsoft C++
            Microsoft visual C++（VC，VC++）
1998，ISO C++98
2003，对C++98进行修订，C++03
2011，ISO C++2011/C++0X
2014，ISO对C++做了部分扩展，即C++14
据说2017，C++2017

2 应用领域
2.1 游戏
2.2 科学计算(Fortain)
2.3 网络通信（ACE）
2.4 操作系统和设备驱动
...

3 C和C++
3.1 都是编译型语言
3.2 强类型语言
  C++具有比C更加严格的类型检查机制
3.3 C++去除了C不好的特性
3.4 C++增加了C语言没有的好的特性
    支持面向对象，操作符重载、异常处理、泛型编程..
3.5 C++比C更适合大型软件的开发
---------------------
二  第一个C++程序
1 编译方式
g++ first.cpp
gcc   first.cpp -lstdc++

2 文件扩展名
.cpp  .cc  .C  .cxx

3 头文件
 #include<iostream>
 所有与I/O有关的类型、对象、函数都在该头文件中声明

 标准C的头文件依然可以使用。
 #include <stdio.h> <==>#include <cstdio>

4 输入和输出
 用cin对象表示标准输入
 用cout对象表示标准输出

三 名字空间
1 定义名字空间
namespace 名字空间名{
    名字空间成员1；
    名字空间成员2；
    ...
};
名字空间的成员可以是变量、函数、类型、名字空间；
namespace ns1{
   int x;
   void foo(void){...}
   struct Student{...};
   namespace ns2{...}
}
2 名字空间成员使用
1）通过作用域限定符"::"
  名字空间名::要访问成员
  ns1::x = 100;

2）名字空间指令
      using namespace 名字空间名；
      在该指令以后的代码中，指定名字空间中的成员都可见，访问其中的成员可以省略作用域限定。

3）名字空间声明
 using 名字空间名::名字空间成员
 将名字空间中的特定成员引入到当前作用域，在该作用域访问这个成员就如同访问自己的成员一样，可以省略作用域限定。

3 无名名字空间
不属于任何名字空间的标识符，将被编译器划分到无名名字空间中。
::标识符

4 嵌套名字空间
namespace ns1{
     int x = 10;
     namespace ns2{
           int x = 20;
           namespace ns3{
	int x = 30;
           }
     }
}
cout << ns1::x << endl;//10
cout << ns1::ns2::x << endl;//20
cout << ns1::ns2::ns3::x << endl;//30

四 C++结构体、联合体和枚举
1.C++结构体
1）定义结构体变量，可以省略struct关键字
2）结构体可以定义函数，称为成员函数，在成员函数中可以直接访问成员变量。

2.C++联合体
1）union关键字可以省略
2）支持匿名联合

3.C++枚举
1）enum关键字可以省略
2）C++枚举是一种独立的数据类型，而C中枚举本质就是整型数。
    enum COLOR｛RED,GREEN,BLUE｝;
    COLOR c;
C语言中:  c = 100;//ok
C++中:   
       c  = 100;//error
       c  = RED;//ok
五 字符串
1.C中字符串：双引号字面值，字符指针，字符数组。
printf("hello world!");
char* p = "Hello World";
char s[] = "HELLO WORLD"；

strcpy(p,"12345678");//error
strcpy(s,"123456789123456789");//ok
p = "12345678";//ok
s = "12345678";//error

char arr[100];
arr[0] = 'h';
arr[1] = 'e';
arr[2] = 'l';
arr[3] = 'l';
arr[4] = 'o';
cout << arr << endl;//hello

2 C++兼容C的字符串同时，增加string类型，专门表示字符串的。

六 C++的布尔类型
1 bool类型是C++中的基本数据类型，专门表示逻辑值
2 bool在内存中占一个字节：1表示true，0表示false
3 bool类型变量可以接收任意类型的表达式，其值非0则为true，零则为false。

七 C++字符形式的运算符(了解)
&&   --  and
||       --  or
^       --  xor
{        -- <%
}        --  %>
!        --  not
!=      --  not_eq
......

八、C++的函数
1. 函数重载
    draw(int x,int y,int r){...}
    draw(int x,int y,int w,int h){...}
1)函数重载的定义
   在相同作用域中，定义同名的函数，但是它们的参数表必须有所区分，这样的函数构成重载关系。
   重载与函数的返回类型无关，与参数名也无关，而只与参数的个数，参数类型和顺序有关。









