C语言程序中通常会包含预处理指令
预处理指令一定以#做开头并且不是以
    分号作为结尾
#include预处理指令可以把一个头文件
	的内容包含到当前文件中
这个指令中通常采用相对路径表示被
    包含的头文件位置
把相对路径放在<>中表示以系统中预先
    规定好的一组目录依次作为起点
	查找被包含的头文件
把相对路径包含在""中表示首先以当前
    文件所在目录作为起点查找，然后
	再以系统中规定的目录作为起点查找

标识符应该使用英文单词编写
表示符编写规则
1.第一个字符必须是英文字母或下划线
2.后面的字符可以是英文字母，下划线
     或阿拉伯数字字符
3.大小写不同的标识符是不同的标识符
    （大小写敏感）
4.关键字不可以作为标识符使用
5.标识符的长度没有限制，但是计算机
     只会截取前面的一部分来使用

编译器可以把源程序翻译成计算机能
    认识的格式
gcc是Linux系统中最常使用的C语言编译器

MinGW是Windows里的gcc

gcc编译器工作过程
1.处理预处理指令
2.把第一步的结果翻译成计算机能
    认识的格式(编译)
3.把第二步的所有结果合并成一个
    执行文件（链接）

gcc选项介绍
-E       只处理所有预处理指令
-c       只完成预处理和编译
         处理结果是以.o作为扩展名
		 的目标文件
-o       用来指定得到的新文件名称
-std=c89/-std=c99
         决定采用什么版本的规范进行
		 编译
		 默认采用C89规范

C语言官方预先提供了一组工具，它们
    叫做标准函数
每个标准函数可以用来解决一个常见
    问题
每个标准函数有一个自己的名字，不同
    标准函数名称不同
可以在程序中编写函数调用语句来使用
    标准函数

printf标准函数可以把程序中的数字
    打印在屏幕上
为了使用这个标准函数需要包含stdio.h
    头文件
可以使用占位符把双引号里面的数字
    转移到双引号后面
不同类型的数字应该和不同占位符配合
    使用，整数类型数字应该和%d配合
	使用
可以在一条语句中使用多个占位符

计算机内存由大量字节构成，每个
    字节可以记录一个数字

每个字节有一个编号，不同字节的编号
    不同
这个编号叫做字节的地址
所有字节的地址从0开始向上递增

内存中几个相邻字节可以合并在一起
    用来记录一个数字

我们可以把内存中用来记录一个数字的
    所有字节统称为一个存储区
一个存储区只能记录一种类型的数字
存储区也有地址，它的地址是它所包含
    的字节中地址最小字节的地址

程序中可以使用变量代表一个存储区
对变量的操作就是对它所代表存储区
    的 操作
使用变量之前必须使用变量声明语句
    声明变量
可以在一条语句中声明多个同类型的变量

赋值语句可以向变量里放一个数字
赋值语句的核心是赋值操作符(=)
赋值操作符左边的内容必须能代表
    一个存储区，这种内容叫左值

可以在声明变量的时候就立刻对变量
    进行赋值，这叫做变量初始化
所有变量都应该初始化

可以直接在程序中把变量当作数字使用
计算机会首先从变量对应的存储区里
    获得数字然后再进行计算

***变量名称可以代表两个不同的内容，
   必须根据它所在的环境判断



