指针变量用来记录地址数据
没有记录有效地址的指针变量不
    可以使用
指针变量可以用来表示捆绑的存储区

指针也分类型，不同类型的指针适合
    记录不同类型存储区的地址

可以在一条语句里声明多个同类型
    的指针变量，每个指针变量
	名称前都应该加*

无效指针可以分成以下两种
1.空指针里记录空地址(NULL),
	这个地址的数值就是数字0
2.除了空指针以外的无效指针都
    叫做野指针

程序中禁止出现野指针
指针变量必须初始化

指针变量初始化的时候*没有参与
    赋值过程

指针和变量之间的捆绑关系在程序
    执行过程中会随时改变
可以把指针当作变量的某种身份

如果把数组中第一个存储区的地址
    记录在指针里则可以通过指针
	找到数组里的每个存储区
这个时候可以认为指针间接捆绑了
    数组里的每个存储区
可以在指针变量名称后加下标，这种
    方法可以表示数组里的存储区

地址数据可以参与如下计算过程
地址 + 整数,地址 - 整数,地址 - 地址
地址加减整数n实际加减的是n个捆绑
    存储区的大小
地址数据相减得到一个整数，这个整数
    表示两个地址之间包含的捆绑
	存储区个数

指针和数组名称的区别
1.数组名称不可以被赋值，指针可以
    被赋值
2.对数组名称做sizeof计算和对指针
    做sizeof计算结果不同
3.对数组名称取地址和对指针变量
    取地址结果不同

跨函数使用存储区必须通过指针实现
数组做形式参数的时候真正的形式
    参数其实是一个指针

指针存储区可以用来存放函数的返回值
可以采用这种做法让一个函数使用
    另外一个函数的静态局部变量
	存储区
不可以把普通局部变量的地址作为
    返回值使用

可以在声明指针变量的时候使用const
    关键字
可以在声明指针变量的时候把const
    关键字写在最前边
不可以通过这种指针对它捆绑的存储区
   进行赋值

所有用来实现跨函数使用存储区的指针
    都尽量用这种方法加const关键字

可以在声明指针变量的时候在指针变量
    名称前加const关键字
这种指针本身不可以被赋值，但是可以
    通过指针对它的捆绑存储区进行
	赋值

声明指针变量时可以使用void作为
    类型名称
这种指针叫做无类型指针
这种指针可以和任意类型存储区捆绑
无法通过这种指针知道捆绑存储区
    的类型
不可以在这种指针前面直接加*也
    不可以用这种指针进行加减
	整数的计算
这种指针必须首先强制转换成有类型
    指针然后才能使用

这种指针通常用来作为函数的形式参数

预习：
    1.字符串


作业：
    1.编写函数把一个数组里所有
	存储区的内容前后颠倒。
	如果数组里原有内容是1 2 3 4 5
	颠倒后的内容是5 4 3 2 1
    要求用指针编写











