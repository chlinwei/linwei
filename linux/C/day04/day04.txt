负数十进制转换成二进制的方法
1.首先得到负数的相反数
2.把第一步的结果转换成二进制
3.把第二步结果中每个数位上的数字
    变成相反数
4.把第三步的结果加一

-14
14
0000 1110
1111 0001
1111 0010

可以采用同样的方法根据任何二进制
    计算出相反数的二进制

有符号类型最左边数位叫做符号位，
    符号位内容为0表示数字是非负数，
	符号位内容为1表示数字是负数

负数的二进制转换成十进制的方法
1.首先计算相反数的二进制
2.把第一步的结果转换成十进制
3.根据第二步的结果计算相反数

1100 1010
0011 0110
54
-54

当把占地大的整数类型数字赋值给占地
    小的整数类型存储区的时候只会
	保留后面的二进制数位，这会导致
	数据丢失
当把占地小的有符号整数类型数字赋值
    给占地大的整数类型存储区时扩展
	出来的二进制都应该填充符号位

把二进制数字从右向左每三个数位
    分成一组，每组用一个0到7之间
	的数字替代。这个结果叫做数字
	的八进制表示方式

0110 1010   01 101 010  152(八进制)

可以在程序中直接使用八进制方式
    表示数字，但是必须以0作为开头
可以采用%o作为占位符把数字的八进制
    表示方式打印在屏幕上

把二进制数字从右向左每四个数位分成
    一组，每组用一个字符替换（用
	a到f字母替换10到15之间的数字）

1100 1011     cb(十六进制)

可以直接在程序中使用十六进制方式
    表示数字，但是必须以0x做开头
可以采用%x或%X做占位符把数字的
   十六进制表示方式打印在屏幕上
以%x做占位符的时候打印结果中所有
    字符都是小写的
以%X做占位符的时候打印结果中所有
    字符都是大写的

根据操作符所需要的数字个数把操作符
    分成三类：单目操作符，双目
	操作符和三目操作符

如果参与除法计算的数字都是整数则
   计算结果只会保留整数部分

C语言里使用%表示取余操作

赋值语句可以当作数字使用，这个数字
    就是赋值完成后左边存储区里的
	数字
可以在一条语句里使用多个赋值
    操作符，这个时候先计算右边
	的操作符后计算左边的操作符

绝大多数双目操作符可以和赋值操作符
    合并形成复合赋值操作符,例如
	+=,%=等
复合赋值操作符会把左右两边的内容
    按照双目操作符的要求做计算，
	然后把计算结果记录在左边的
	存储区里
复合赋值操作符的优先级和赋值操作符
    优先级一样低

自增操作符(++)和自减操作符(--)
	都是单目操作符
这两个操作符只能和存储区配合使用
它们可以把一个存储区的内容加一或
    减一
这两个操作符都可以有两种使用方法，
    一种是前操作（操作符写在
	存储区前面），另一种是后操作
	（操作符写在存储区后面）
自增和自减表达式本身可以当作数字
    使用，前操作当数字使用的时候
	是修改后的数字，后操作当数字
	使用的时候是修改前的数字
不要在一条语句里对同一个变量多次
    进行自增或自减计算


逻辑表达式的结果只能是真或者假
逻辑操作符用来编写逻辑表达式

！是一个单目逻辑操作符，它可以计算
    一个布尔值的相反值
这个操作符叫做求反操作符

双目逻辑操作符包含==(等于),
	!=(不等于),>(大于),>=(大于等于)
	<(小于)和<=(小于等于)

最多包含一个双目逻辑操作符的表达式
    叫简单逻辑表达式
C语言里如果一个逻辑表达式里包含
    不止一个双目逻辑操作符则需要
	把它拆分成多个简单逻辑表达式
	然后再合并

逻辑与(&&)和逻辑或(||)也是双目
    逻辑操作符，它们可以把两个
	逻辑表达式合并成一个

如果两个逻辑表达式结果都是真则
    用与合并后结果才是真，否则
	结果是假
只要两个逻辑表达式里有一个的结果
    是真则用或合并后结果就是真

与(&&)和或(||)都具有短路特征
如果前面的逻辑表达式结果可以决定
    整个逻辑表达式的结果则计算机
	忽略后面的逻辑表达式

位操作符可以直接操作二进制数位

~是一个单目位操作符，它可以计算一个
    二进制数字每个数位上的内容相反
	数字
~叫做按位求反操作符

双目位操作符包括&(按位与),
	|(按位或)，^(按位异或)
双目位操作符可以把两个数字对应
    二进制数位上的内容做计算

按位与把对应数位上的数字做与计算
只要对应数位中有一个的内容是0则
    计算结果就是0，否则是1

     3     0000 0011
&    5     0000 0101
           0000 0001

按位或把对应数位上的数字做或计算
只要对应数位中有一个的内容是1则
    结果就是1，否则是0

     3    0000 0011
|    5    0000 0101
          0000 0111

按位异或把对应数位上的数字做异或
    计算
只要两个数位上的内容一样则结果是0
    否则结果是1

     3       0000 0011
^    5       0000 0101
             0000 0110

移位操作符可以把一个数字的所有
    二进制数位统一向左或向右
	移动n个位置
>>表示右移操作
<<表示左移操作
它们都是双目操作符
操作符左边的数字是将要进行移位
    操作的数字
操作符右边的数字是将要移动的
    位数

左移时右边空出来的位置上一定补充0
有符号类型右移时左边空出来的位置
    上补充的是符号位，无符号类型
	右移时左边空出来的位置上补充0

一般来说向左移动n个位置相当于乘以
    2的n次方，向右移动n个位置相当
	与除以2的n次方

位操作符不会修改存储区内容而只会
    计算出一个新数字

&也可以作为单目操作符使用，它
   可以用来计算一个存储区的地址
这个操作符应该写在一个代表存储区
    内容的前面
可以使用%p做占位符把地址数据打印
    在屏幕上
在我们的计算机上所有地址数据都
    占4个字节

*也可以作为单目操作符使用，它
    可以根据地址找到来源的存储区
这个操作符应该写在一个地址数据
    的前面


预习：
    1.操作符
	2.类型转换
	3.分支
	4.for循环

作业：
    1.从键盘得到一个三位数，
	   把它倒序打印在屏幕上。
	   例如得到的数字是123就
	   应该在屏幕上打印321





