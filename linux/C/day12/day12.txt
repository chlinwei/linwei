#define预处理指令可以用来定义宏

宏可以用来给数字起名字
定义宏的时候要把宏名称写在前面，
    把它所代表的数字写在后面
宏名称通常全部由大写英文字母构成
宏名称里不能包含空格
用宏给数字起名字的时候宏定义语句
    里不能有赋值操作符
编译器会把程序中所有宏名称替换成
    它所代表的数字

可以在编译命令中使用-D选项指定
    宏所代表的数字

如果程序中的某些数字只能在编译的
    时候才能确定就应该用宏代表
	它们

宏还可以用来给计算公式起名字
计算公式里包含未知数字，可以使用
    宏参数表示这些未知数字

宏的参数不一定代表数字，所以它没有
    类型名称
如果宏有多个参数，不同参数之间
   需要用逗号分开

编译器采用二次替换的方式处理带
   参数的宏

宏不能使用自己的存储区和函数
    进行数据传递
宏没有形式参数也没有返回值

能当作数字使用的宏必须编写成
    一个表达式（因为宏没有
	返回值存储区）

宏的参数可以直接代表函数的存储区

因为宏没有返回值存储区，所以不能
    保证优先计算宏内部的操作符
所有能当作数字使用的宏必须写在
    一对小括号里

因为宏没有形式参数，所以不能保证
    优先计算参数内部的操作符
宏的所有能当数字使用的参数也应该
    写在小括号里

不要把自增或自减的计算结果作为宏
     的参数

#是一个宏操作符，它可以把宏的参数
	 转换为字符串字面值
##也是一个宏操作符，它可以把一个
	 代表标识符的宏参数和其他
	 内容连接成为一个新的标识符

条件编译可以在编译的时候从几组语句
    中选择一组编译而忽略其他组
#ifdef/#ifndef...#else...#endif
以上结构可以根据一个宏是否被定义
    过从两组语句中选择一组编译
这个结构最开始的预处理指令是二选一
    的，这个最开始的预处理指令
	后要跟着一个宏名称
如果采用#ifdef则它后面的宏名称
    如果被定义过就编译前一组，否则
	编译后一组
如果采用#ifndef则刚好相反

#if...#elif(任意次数)...#else...#endif
以上结构也可以实现条件编译，它可以
    根据任意逻辑表达式的结果从
	几组语句中选择一组编译

多文件编程时一个文件里可以包含
    多个函数，一个函数必须完整
	的属于一个文件

多文件编程基本步骤
1.把所有函数分散在多个源文件里
    （主函数单独占一个文件）
2.为每个源文件编写配对的头文件
    （主函数所在源文件不需要配对
	头文件）所有不分配内存的内容
	都可以写在头文件里。至少要
	包含源文件里所有函数的声明
3.修改所有源文件，让它们包含必要
    的头文件(配对头文件是必要
	头文件，如果源文件里使用了
	某个头文件中声明的函数则这个
    头文件也是必要头文件)

编译多文件程序时可以在gcc命令中
    把所有源文件名称列出

也可以把编译过程记录在Makefile里，
    然后使用make工具进行编译

应该把头文件的内容包含在预处理
    中，这样可以避免多次编译
最开始的预处理指令必须是#ifndef

头文件里使用的宏名称应该根据文件
    路径变化得到

如果一个源文件里希望使用另外一个
    源文件里声明的全局变量就需要
	使用extern关键字再次声明这个
	全局变量

使用extern关键字声明变量的语句通常
   放在头文件里

静态全局变量不可以被其他源文件里
    的语句使用

预习：
    1.结构体，枚举和联合

作业：
    1.编写一个宏实现大小写字符
	    之间的转换








