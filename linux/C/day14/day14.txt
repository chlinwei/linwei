枚举也可以用来创建新的数据类型
枚举类型存储区就是一个整数类型
    存储区，只不过这个存储区
	里只能记录有限的几个整数
声明枚举类型时需要提供一组名称，
    每个名称代表一个整数，这些
	整数都可以记录在枚举类型
	存储区里
声明枚举类型的时候需要使用enum
    关键字
第一个枚举名称对应的整数是0，向后
    依次递增
可以在声明枚举类型的时候指定某个
    名称对应的整数，它后面的名称
	对应的整数会随之改变

联合也可以用来声明新的数据类型
联合存储区可以用不同的方式解释
联合也需要声明，声明联合的时候
    需要使用union关键字
联合存储区的大小是最大使用方式
    的大小

二级指针可以用来记录指针存储区
    的地址
只能记录普通存储区地址的指针叫
    一级指针
声明二级指针的时候需要写两个*

在二级指针变量前加**可以表示
    捆绑的普通变量存储区或里面
	 的数字
在二级指针变量前加*可以表示
    捆绑的一级指针存储区或里面
	的地址数据
单独使用二级指针变量名称可以表示
   二级指针本身的存储区或里面的
   地址数据

二级指针可以用来代表指针数组，但是
    不可以代表二维数组

无类型指针有可能代表一级指针也
    可能代表二级指针

二级指针作为函数的形式参数可以
    让被调用函数使用其他函数的
	指针类型存储区

C语言里函数也有地址
函数名称可以用来代表函数地址
函数指针可以用来记录函数地址
函数指针也需要先声明然后才能使用，
    函数指针声明语句可以根据
	函数声明语句变化得到

函数指针也分类型，不同类型的函数
    指针可以和不同类型的函数捆绑

函数指针可以用来调用函数

函数指针也可以形式参数使用
可以作为实际参数使用的函数叫
    回调函数

可以在编写程序的时候临时分配一定
    数量的存储区，这种分配
	方式叫做动态分配
动态分配存储区的大小是可以临时
    指定的
为了管理动态分配存储区需要使用
    一组标准函数
为了使用这组标准函数需要包含
    stdlib.h头文件

malloc函数可以动态分配一组连续
    的字节
这个函数需要一个整数类型参数
    表示希望分配的字节个数
这个函数把分配好的第一个字节的
    地址作为返回值
如果这个函数执行失败则返回值
    是空地址
这个函数的返回值记录在一个无类型
    指针存储区里，使用之前应该
	强制类型转换成有类型指针

动态分配内存使用完以后必须释放，
    否则会造成内存泻露问题
free函数可以用来释放动态分配内存
free函数需要动态分配内存的首地址
    作为参数
一次分配的所有内存必须一起释放掉
如果用指针作为free函数的参数则
    函数结束后指针将成为野指针，
	必须恢复成空指针

调用函数可以使用被调用函数动态
    分配的内存

预习：
    1.文件操作

作业：
    1.编写程序从键盘得到一个学生
	   的信息（整数类型的编号，
	  字符串表示的姓名和字符串
	  表示的入学日期），把学生
	  信息记录在动态分配内存中
	  然后打印在屏幕上
	  要求在函数里获得学生信息
	  并在主函数里打印







