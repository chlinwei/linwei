C语言里可以在一个存储区里记录
   多个相关数字
这种存储区的类型叫结构体类型，
    这种类型需要程序员编写
	语句创建出来
结构体存储区里包含多个子存储区，
    每个子存储区可以用来记录一个
	数字
结构体中不同子存储区的类型可以
    不同，甚至某些子存储区还可以
	是结构体存储区
结构体声明语句可以用来创建结构体
    类型
结构体声明语句中需要使用struct
    关键字
结构体声明语句中包含的变量声明
    语句不会分配内存，它们只是
	用来表示结构体存储区内部的
	多个子存储区类型
结构体声明语句可以写在头文件里
结构体类型可以用来声明结构体
    变量，结构体变量分配了内存，
	它们可以用来记录数字
声明结构体变量时需要把struct
    关键字和结构体类型名称合
	起来作为类型名称使用

typedef关键字可以用来给现有数据
    类型起别名
别名可以用来替换原有类型名称

可以把结构体声明语句和起别名语句
    合并
这个时候可以省略结构体本身的名称

C语言不可以在结构体里包含函数

结构体变量在声明的时候也应该
    初始化

初始化结构体变量的时候可以为每个
   子存储区提供一个初始化数据，
   所有初始化数据写在大括号中间，
   不同数据之间用逗号分开

结构体变量通常不会作为整体使用，
    一次只会使用其中某个子存储区
可以在结构体变量名称后加.然后
    再加某个子存储区名称的方法
	表示某个子存储区

同类型结构体变量之间可以直接赋值

结构体指针用来记录结构体存储区
    的地址
当结构体指针和结构体存储区捆绑
    后可以在结构体指针后加->再
	加上子存储区名称来表示某个
	子存储区

结构体存储区可以作为形式参数使用
但是这样会造成时间和空间的浪费，
    一般不这么做
使用结构体指针作为形式参数可以
    避免这种浪费
结构体指针形式参数要尽量加const
    关键字
不要使用结构体存储区记录返回值
    而应该使用结构体指针存储区，
	这样可以避免时间和空间的浪费
不可以把局部结构体存储区的地址
    作为返回值使用

一个存储区的地址必须是它自身大小
    的整数倍（double类型存储区的
	大小只需要是4的整数倍）
这个规则叫做数据对齐
结构体内部的子存储区通常也需要
   遵守数据对齐的规则
数据对齐可能导致结构体内部不同
    子存储区之间有空隙

结构体存储区的大小必须是其中占地
    最大基本类型存储区大小的
	整数倍
	（如果占地最大的基本类型存储区
	是double则结构体存储区的大小
	只需要是4的整数倍就可以了）
这个规则叫做数据补齐
数据补齐可能在结构体存储区最后
    造成一些浪费的字节

预习：
    1.枚举，联合
	2.二级指针
	3.函数指针
	4.回调函数
	5.动态内存分配

作业：
    1.声明结构体用来记录屏幕
	  上一条线段的位置，编写
	  函数从两条线段中挑出
	  比较长的线段再传递回调用
	  函数





