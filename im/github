http://www.cnblogs.com/yaozhongxiao/p/3811130.html
git config --global user.name "chlinwei"
git config --global user.email"862350707@qq.com"
git add filename 把文件添加到暂存区(stage)
git commit -m "wrote a readme file " 把所有文件提交到仓库
git commit -am "add all file" 把所有修改过的文件提交到仓库,不包括新建的文件
git diff查看修改前和修改后的区别
git log 查看日志
git log --pretty=oneline 
HEAD表示当前版本也就是最新的版本
HEAD^ 表示上个版本
HEAD^^表示上上个版本 以此类推
git reset --hard HEAD^ 退回上个版本
git reflog//查看历史命令
工作区(working directory):就是在电脑里能看到的目录
版本库(repository):工作区有一个隐藏目录.这不算
工作区，而是git的版本库,
以及指向master的一个指针叫HEAD
git add把文件添加进去,实际上就是把文件修改添加到暂存区
git commit 提交更改就是把暂存区的所有内容提交到当前分支
创建git版本库时git自动为我们创建了唯一一个master分支
所以现在git commit 就是往master提交更改

git diff HEAD -- filename //查看工作区和版本库里的最新版本的区别
git checkout -- filename //撤销
1)一种是readme.txt自修改后还没有被放到暂存区，现在，撤销
修改就回到和版本库一模一样的状态；
2)一种是readme.txt已经添加到暂存区后，又作了修改，现在，
撤销修改就回到添加到暂存区后的状态
git reset HEAD readme.txt 将暂存区的修改撤掉,重新回到git add 前的状态
git rm --cached filename 保留本地文件删除stage(暂存区文件)
ssh-keygen -t rsa -C"qq邮箱"
然后直接回车
在住目录下生成.ssh目录里面有两个文件
id_rsa id_rsa.pub
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_rsa
git remote add origin git@github.com:michaelliao/learngit.git//将本地仓库
git remote remove origin:讲远程服务器名删除
关联到远程仓库

git checkout -b dev //-b 表示创建dev分支并切换到dev分支
相当于以下两条命令
git branck dev
git checkout dev


git branch//查看所有分支,当前分支前面会标有一个*
git checkout master//切回到master
git merge dev//将dev的工作合并到master
git branch -d dev//删除dev分支
git log --graph --pretty=oneline --abbrev-commit
 git merge --no-ff -m "merge with no-ff" dev
 //--no-ff 参数表示禁止 fast forward
 因为本次合并时要床家新的commit所以加上-m选项


 打标签
 先切换到指定的分支上
git tag v1.0 提交编号 (如果省略提交编号则为最新的编号)
git tag -a 标签名 -m "version 1.1" 提交编号(比上一条命令多个说明文字)
git tag 查看所有标签名
git show v1.0 查看指定标签名的详细信息


git clone -o test git@github.com:chlinwei/linwei.git haha
克隆的时候,远程主机会自动与本地库关联,默认的远程主机名为origin
-o指定主机名,默认的本地库名为linwei 后面指定可以制定haha为本地库名

git branch -r :查看远程分支
git fetch 远程主机名 远程分支名 :取回远程分支的更新,如果不写远程分支,则
表示所有分支的更新
git config --global color.ui true 显示颜色

解决.gitignore对有些文件不起作用的方法
git rm -r --cached .
git add .
git  commit -m "update .gitignore"



windows下Git中文显示乱码的解决方案:git config --global core.quotepath false
linux下Git 敲命令 git status 不显示颜色的解决方案:
git config color.ui true
