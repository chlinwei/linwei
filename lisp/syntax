lisp中symbol指的是符号,'x 代表的是引用x

(setq x1 123)
(symbolp x1)判断x1是否为符号,结果nil,因为这里x1被替换成了123是值
(symbol 'x1') 这里的x1是个symbol,返回t
(symbol-function 'sin) 返回sin函数的函数体
(symbol-plist 'sin) 返回sin函数的属性列表
(boundp 'h)判断h是否被定义,如果被定义返回t,否则返回nil
(fboundp 'f');nil
(defun f() 3) 判断函数是否定义,定义返回t,否则返回nil
(fboundp 'f);t



(kill-region 1 3) 字符从1开始删除第和第2个字符
(kill-ring-save 1 3) 和上面一样只是保存而不是删除
(kill-new "cute new") 复制"cute new"
(yank) 粘贴

(interactive "sEnter your name:") s表示从minibuffer读取字符串
(interactive "nEnter your age:") n表示从minibuffer读取数字


(defun ask-name-and-age (x y) ;;先出现Enter your name:出入linwei,再出现Enter
your age:
  (interactive "sEnter you name:
nEnter your age: ")
  (message "Name is: %s, Age is: %d" x y))


(defun do-something (x y) ;;interactive节后面跟list
  "Ask name and age"
  (interactive
   ;; complex code here that returns a list
   (list "Mary" 22))
  (message "Name is: %s, Age is: %d" x y))
