css样式表示方式有3种
1.内联方式:
<body>
<p style="height: 100px">hah</p>
</body>
 
2.内部样式
样式规则:选择器,样式声明
选择器 {
	若干样式声明;
};
<head>
    <meta charset="utf-8">
    <title></title>
    <style>
        p{
            height:100px;
        }
    </style>
</head>

3.外部样式表
<head>
	<link rel="stylesheet" href="css/01.css">
<head>


css样式表特征:
1)继承性:大部分的样式规则和样式声明是可以被继承的
2)层叠性:可以为一个元素定义多个样式表,不冲突的,多个样式表/规则的优先级来应用样式






css基础选择器
1.通用选择器:匹配页面中所有的元素
*{
	font-size:12px;
}
2.元素选择器:由元素名称作为选择器
作用:控制某元素的默认样式
h1 {font-size:12px;}

3.类选择器:
作用:负责定义样式,可以由任意一个元素灵活引用.
注意:类选择器名称不能以数字开头

.redColor{
	color:red;
}
引用类选择器:由元素的class属性进行引用
<p class="类选择器名称"></p>
1)多类选择器:允许一个元素引用多个类选择器,多个选择器用"空格"隔开
<head>
    <style>
        .w{
            width:200px;
        }
        .h{
            height:400px;
        }
    </style>
</head>
<body>
<p class="w h">haha</p>
</body>
2)分类选择器:将类选择器和元素选择器结合来使用,以实现对某种元素中不同样式的细分控制

语法: 元素选择器.类选择器
p.redColor{}:定义class为redColor的p元素的样式


4.id选择器:与元素id联用,定义指定id值元素的的样式,专属定制
语法: #id值{...}
#import {
	color:red;
}

5.群组选择器:以逗号隔开选择器列表,将一些相同的规则用于多个元素中
#import,.redColor,span{ ...  }


6.后代选择器:具备层级关系,被嵌套的都可以被称为后代
语法:选择器1 选择器2{}
#d1 p span{}
匹配id为d1的元素中的p元素中的span元素

7.子代选择器
子代:只具备一级的层级关系,要求选择器之间只能存在父子关系
语法: 选择器1>选择器2
#d1>p{...}  匹配id为d1的元素中下一级的子级元素p

8.伪类选择器:为了匹配不同的状态的
语法: 
:伪类选择器
选择器:伪类选择器{
...
 <style>
        #a:visited{
            color:yellow;
        }
</style>
<a id="a"  target="_blank" href="http://www.baidu.com">百度</a>

