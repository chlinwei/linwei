简介:远程数据同步工具,只传送两个文件的不同部分,而不是每次都整体,速度快





-v, --verbose 详细模式输出。
-q, --quiet 精简输出模式。
-c, --checksum 打开校验开关，强制对文件传输进行校验。
-a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD。
-r, --recursive 对子目录以递归模式处理。
-R, --relative 使用相对路径信息。
-b, --backup 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为~filename。可以使用--suffix选项来指定不同的备份文件前缀。
--backup-dir 将备份文件(如~filename)存放在在目录下。
-suffix=SUFFIX 定义备份文件前缀。
-u, --update 仅仅进行更新，也就是跳过所有已经存在于DST，并且文件时间晚于要备份的文件，不覆盖更新的文件。
-l, --links 保留软链结。
-L, --copy-links 想对待常规文件一样处理软链结。
--copy-unsafe-links 仅仅拷贝指向SRC路径目录树以外的链结。
--safe-links 忽略指向SRC路径目录树以外的链结。
-H, --hard-links 保留硬链结。
-p, --perms 保持文件权限。
-o, --owner 保持文件属主信息。
-g, --group 保持文件属组信息。
-D, --devices 保持设备文件信息。
-t, --times 保持文件时间信息。
-S, --sparse 对稀疏文件进行特殊处理以节省DST的空间。
-n, --dry-run现实哪些文件将被传输。
-w, --whole-file 拷贝文件，不进行增量检测。
-x, --one-file-system 不要跨越文件系统边界。
-B, --block-size=SIZE 检验算法使用的块尺寸，默认是700字节。
-e, --rsh=command 指定使用rsh、ssh方式进行数据同步。
--rsync-path=PATH 指定远程服务器上的rsync命令所在路径信息。
-C, --cvs-exclude 使用和CVS一样的方法自动忽略文件，用来排除那些不希望传输的文件。
--existing 仅仅更新那些已经存在于DST的文件，而不备份那些新创建的文件。
--delete 删除那些DST中SRC没有的文件。
--delete-excluded 同样删除接收端那些被该选项指定排除的文件。
--delete-after 传输结束以后再删除。
--ignore-errors 及时出现IO错误也进行删除。
--max-delete=NUM 最多删除NUM个文件。
--partial 保留那些因故没有完全传输的文件，以是加快随后的再次传输。
--force 强制删除目录，即使不为空。
--numeric-ids 不将数字的用户和组id匹配为用户名和组名。
--timeout=time ip超时时间，单位为秒。
-I, --ignore-times 不跳过那些有同样的时间和长度的文件。
--size-only 当决定是否要备份文件时，仅仅察看文件大小而不考虑文件时间。
--modify-window=NUM 决定文件是否时间相同时使用的时间戳窗口，默认为0。
-T --temp-dir=DIR 在DIR中创建临时文件。
--compare-dest=DIR 同样比较DIR中的文件来决定是否需要备份。
-P 等同于 --partial。
--progress 显示备份过程。
-z, --compress 对备份的文件在传输时进行压缩处理。
--exclude=PATTERN 指定排除不需要传输的文件模式。
--include=PATTERN 指定不排除而需要传输的文件模式。
--exclude-from=FILE 排除FILE中指定模式的文件。
--include-from=FILE 不排除FILE指定模式匹配的文件。
--version 打印版本信息。
--address 绑定到特定的地址。
--config=FILE 指定其他的配置文件，不使用默认的rsyncd.conf文件。
--port=PORT 指定其他的rsync服务端口。
--blocking-io 对远程shell使用阻塞IO。
-stats 给出某些文件的传输状态。
--progress 在传输时现实传输过程。
--log-format=formAT 指定日志文件格式。
--password-file=FILE 从FILE中得到密码。
--bwlimit=KBPS 限制I/O带宽，KBytes per second。
-h, --help 显示帮助信息。




1.本地间同步
#mkdir src
#touch src/{1,2,3} 
#mkdir dest

rsync -av src dest #将src目录同步到dest目录下(包括src目录)
rsync -av src/ dest #将src目录下的内容同步到dest目录下(不包括src目录)

#如果dest目录不存在
rsync -av src/ dest 将会出错和cp一样
rsync -av src dest 和cp 一样



2.远程同步
和本地间同步一样,只是要加上"ip:"而已
rsync -av src 192.168.200.146:~/dest







1)将dirA的所有文件同步到dirB内，并保留文件的属主，属组，文件权限等信息。
rsync -avz dirA/ dirB/

2)将dirA的所有文件同步到dirB内，并删除dirB内多余的文件
rsync -avz --delete dirA/ dirB/ #源目录和目标目录结构一定要一致！！不能是dirA/* dirB/  或者dirA/ dirB/*  或者 dirA/* dirB/*


3)将dirA的所有文件同步到dirB，但是在dirB内除了fileB3.txt这个文件
不删之外，其他的都删除,注意加上了--delete选项后不能用dirA/* 不然--delete无效
rsync -avz --delete --exclude "fileB3.txt" dirA/ dirB/

4) 将dirA目录内的fileA1.txt和fileA2.txt不同步到dirB目录内，
并且在dirB目录内删除多余的文件。
rsync -avz --exclude="fileA1.txt" --exclude="fileA2.txt" --delete dirA/ dirB/

5）将dirA目录内的fileA1.txt和fileA2.txt不同步到dirB目录内。
rsync -avz --exclude="fileA1.txt" --exclude="fileA2.txt" dirA/ dirB/


6) 将dirA目录内的fileA1.txt 和fileA2.txt同步到dirB目录内,其他文件不同步,
注意--include和exclude 的顺序
rsync -avz --include="fileA1.txt" --include="fileA2.txt" --exclude=* dirA/ dirB

7)将dirA目录内的fileA1.txt和fileA2.txt不同步到dirB目录内,其他文件将同步，并且在dirB目录内,删除多余的文件，同时，如果dirB内有fileA2.txt和fileA1.txt这两个文件,则将被删除,如果将--delete-exclude改为--delete则,不会同步file1A1.txt
和fileA2.txt,同步其他文件,删除dirB中多余的文件,如果dirB中含有fileA1.txt,fileA2.txt,则这两个文件将不被删除
rsync -avz --exclude="fileA1.txt" --exclude="fileA2.txt" --delete-excluded 
dirA/ dirB/








daemon模式:
两种运行方式:
1)独立运行方式:
场景:对于负荷较重的rsync服务器
运行:rsync --daemon


2)xinetd运行方式
场景:负荷较轻的rsync服务器
运行: yum install xinetd,vim /etc/xinetd.d/rsync,将 disable=yes 改为 no
      service xinetd start
      chkconfig rsync on




daemon服务器配置文件/etc/rsyncd.conf
全局参数
在全局参数部分也可以定义模块参数，这时该参数的值就是所有模块的默认值
address --在独立运行时，用于指定的服务器运行的 IP 地址；由 xinetd 运行时将忽略此参数，使用命令行上的 –address 选项替代。默认本地所有IP
port --指定 rsync 守护进程监听的端口号。 由 xinetd 运行时将忽略此参数，使用命令行上的 –port 选项替代。默认 873
motd file --指定一个消息文件，当客户连接服务器时该文件的内容显示给客户,相当于ssh连接到服务器上出现的信息
pid file --rsync 的守护进程将其 PID 写入指定的文件
log file --指定 rsync 守护进程的日志文件，而不将日志发送给 syslog
syslog facility --指定 rsync 发送日志消息给 syslog 时的消息级别
socket options --指定自定义 TCP 选项
lockfile --指定rsync的锁文件存放路径
timeout = 600 --超时时间



模块参数
模块参数主要用于定义 rsync 服务器哪个目录要被同步。模块声明的格式必须为 [module] 形式，这个名字就是在 rsync 客户端看到的名字，类似于 Samba 服务器提供的共享名。而服务器真正同步的数据是通过 path 来指定的
基本模块参数
path --指定当前模块在 rsync 服务器上的同步路径，该参数是必须指定的
comment --给模块指定一个描述，该描述连同模块名在客户连接得到模块列表时显示给客户
模块控制参数
use chroot = --默认为 true，在传输文件之前首先 chroot 到 path 参数所指定的目录下；优点，安全；缺点，需要 root 权限，不能备份指向 path 外部的符号连接所指向的目录文件
uid = --指定该模块以指定的 UID 传输文件；默认nobody
gid = --指定该模块以指定的 GID 传输文件；默认nobody
max connections --最大并发连接数，0为不限制
lock file --指定支持 max connections 参数的锁文件。默认 /var/run/rsyncd.lock
list --指定当客户请求列出可以使用的模块列表时，该模块是否应该被列出。默认为 true，显示
read only = --只读选择，也就是说，不让客户端上传文件到服务器上。默认true
write only = --只写选择，也就是说，不让客户端从服务器上下载文件。默认false
ignore errors --忽略IO错误。默认true
ignore nonreadable --指定 rysnc 服务器完全忽略那些用户没有访问权限的文件。这对于在需要备份的目录中有些不应该被备份者获得的文件时是有意义的。 false
timeout = --该选项可以覆盖客户指定的 IP 超时时间。从而确保 rsync 服务器不会永远等待一个崩溃的客户端。对于匿名 rsync 服务器来说，理想的数字是 600（单位为秒）。 0 (未限制)
dont compress --用来指定那些在传输之前不进行压缩处理的文件。该选项可以定义一些不允许客户对该模块使用的命令选项列表。必须使用选项全名，而不能是简称。当发生拒绝某个选项的情况时，服务器将报告错误信息然后退出。例如，要防止使用压缩，应该是：”dont compress = *”。 *.gz *.tgz *.zip *.z *.rpm *.deb *.iso *.bz2 *.tbz
模块文件筛选参数
exclude --指定多个由空格隔开的多个文件或目录(相对路径)，并将其添加到 exclude 列表中。这等同于在客户端命令中使用 –exclude 来指定模式
exclude from --指定一个包含 exclude 规则定义的文件名，服务器从该文件中读取 exclude 列表定义
include --指定多个由空格隔开的多个文件或目录(相对路径)，并将其添加到 include 列表中。这等同于在客户端命令中使用 –include 来指定模式
include from --指定一个包含 include 规则定义的文件名，服务器从该文件中读取 include 列表定义
模块用户认证参数
auth users --指定由空格或逗号分隔的用户名列表，只有这些用户才允许连接该模块（和系统用户没有任何关系）。用户名和口令以明文方式存放在 secrets file 参数指定的文件中。默认为匿名方式
secrets file --指定一个 rsync 认证口令文件。只有在 auth users 被定义时，该文件才起作用。文件权限必须是 600
strict modes --指定是否监测口令文件的权限。为 true 则口令文件只能被 rsync 服务器运行身份的用户访问，其他任何用户不可以访问该文件。默认为true
模块访问控制参数
hosts allow --用一个主机列表指定哪些主机客户允许连接该模块。不匹配主机列表的主机将被拒绝。默认值为 *
hosts deny --用一个主机列表指定哪些主机客户不允许连接该模块





模块日志参数
transfer logging --使 rsync 服务器将传输操作记录到传输日志文件。默认值为false
log format --指定传输日志文件的字段。默认为：”%o %h [%a] %m (%u) %f %l”
设置了”log file”参数时，在日志每行的开始会添加”%t [%p]“；
可以使用的日志格式定义符如下所示：
%o --操作类型：”send” 或 “recv”
%h --远程主机名
%a --远程IP地址
%m --模块名
%u --证的用户名（匿名时是 null）
%f --文件名
%l --文件长度字符数
%p --该次 rsync 会话的 PID
%P --模块路径
%t --当前时间
%b --实际传输的字节数
%c --当发送文件时，记录该文件的校验码




服务器端配置:

vi /etc/rsyncd.conf:

motd file=/root/lw.txt
[test]
path=/root/test
uid=48
gid=48
use chroot=no 
max connections=5 #--最大并发连接数，0为不限制
read only #只读,不让客户端上传文件到服务器上。默认true
timeout=600 
#不压缩
dont compress=*

#如果不写auth users 和 secrets 这两个字段,则客户端可以匿名访问,即rsync 192.168.200.146::test test
#不需要在ip前输入虚拟用户名,也不需要输入密码

auth users = backup
#注意这个文件的权限一定要为600,不然报错,格式 用户:密码
secrets file = /root/tasks/rsync-passwd
hosts allow=192.168.200.149
port = 873
log file=/root/rsync-log.txt





客户端:不需要配置
vim /root/rsync-passwd
123
chmod 600 /root/rsync-passwd (不设置600会rsync的时候会报错)

/etc/rsync-passwd 权限一定要为600否则一定报错

rsync -av backup@192.168.200.146::test test  --password-file=/root/rsync.passwd 






实时监控:yum install inotify-tools
实时监控也就是不用daemon模式,即普通模式,通过inotifywait实时监控目录文件是否变化,服务器把数据实时同步到客户端
因为是普通的模式,所以要输入密码,写脚本的话,输入密码不合适,所以要配置服务器到客户端的面密钥

inotifywait -mrq  --format '%w %f %e' -e modify,create,move,delete,attrib ./test | while read events
do
rsync -a --delete ./test/ 192.168.200.149:~/test
echo "`date +'%F %T'` 出现事件：$events" >> /tmp/rsync.log 2>&1
done


参数 --format:
%w	表示发生事件的目录
%f	表示发生事件的文件
%e	表示发生的事件

/tmp/rsync.log 的日志格式:
2018-10-16 23:37:13 出现事件：./test/ 3 MODIFY

